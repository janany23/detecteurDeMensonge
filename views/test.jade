extends layout

block content
    h1= title
    //p Welcome to #{title}
    .container

        button(id='addQuestion', class='buttonSecondary left', data-toggle='modal', data-target='#myModal')
            i.fa.fa-plus(aria-hidden='true')
            |  Ajouter question
        table.table
            thead
                tr
                    th N°
                    th Question
                    th Play
                    th Réponse
                    th Résultat
            tbody
                each mongo_result, i in questions
                    tr
                        td= (i + 1)
                        td= mongo_result.intitule
                        td
                            button(class='playQuestion buttonIcon', data-questionid="" + mongo_result._id + "")
                                span(class="fa fa-play-circle fa-4")

                        td
                            button(class='playReponse buttonIcon buttonOrange', data-questionid="" + mongo_result._id + "", disabled="disabled")
                                span(class="fa fa-microphone-slash", aria-hidden="true")
                        td(id='td' + mongo_result._id)= mongo_result.resultat
        he
        button(id='finishTest', class='buttonSecondary buttonRed') Terminer le test

    // Modal
    #myModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='exampleModalLabel', aria-hidden='true')
        .modal-dialog(role='document')
            .modal-content
                .modal-header
                    h5#exampleModalLabel.modal-title Ajouter une question à laquelle on peut y répondre que par oui ou non
                    button.close(type='button', data-dismiss='modal', aria-label='Close')
                        span(aria-hidden='true') ×
                .modal-body
                    .form-group
                        | Intitulé de la question
                        input.form-control(type='text', name='question', id='inputQuestion')
                        br
                .modal-footer
                    button.btn.btn-danger(type='button', data-dismiss='modal') Annuler
                    button.btn.btn-success(id='sendQuestion', type='button') Envoyer

    script(src='/javascripts/socket.io/socket.io.js')
    script(type='text/javascript').
        $(document).ready(function () {
            //Connect new client to socket.io
            var socket = io.connect('http://192.168.2.2:3001');

            //listen on the data receive by the arduino
            socket.on('data', function (data) {
                console.log('question :' + data.question + ', resultat : ' + data.resultat);
                var question = data.question;
                var resultat = data.resultat;

                //show result
                $('#td' + question).append(resultat);
            });

            //click on create question
            $('#sendQuestion').on('click', function () {
                if ($('#inputQuestion').val() != '') {
                    $('.form-group').removeClass('has-error');
                    var parameters = {intitule: $('#inputQuestion').val()};

                    //call for create question
                    $.post('/questions/add', parameters, function () {
                        location.reload();
                    });

                } else {
                    $('.form-group').addClass('has-error');
                }
            });

            //click on play question
            $('.playQuestion').on('click', function () {
                var parameters = {'questionId': $(this).data('questionid')};

                $(this).removeClass('fa-microphone-slash');
                $(this).addClass('fa-spinner faa-spin animated');

                //call for get the data from arduino
                $.get('/test/playQuestion/', parameters, function () {
                    $(this).removeClass('fa-spinner faa-spin animated');
                    $(this).addClass('fa-microphone');
                    $(this).prop("disabled", fasle);
                });
            });

            //click on play question
            $('.playReponse').on('click', function () {
                var parameters = {'questionId': $(this).data('questionid')};



                //call for get the data from arduino
                $.get('/test/playReponse/', parameters, function () {

                });
            });

            //click on finish test
            $('#finishTest').on('click', function () {
                window.location.href = '/';
            });

        });
